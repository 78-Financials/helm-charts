{{- if .Values.crd.enable }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.crd.keep }}
    "helm.sh/resource-policy": keep
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.18.0
  name: payazaservices.apps.payaza.africa
spec:
  group: apps.payaza.africa
  names:
    kind: PayazaService
    listKind: PayazaServiceList
    plural: payazaservices
    singular: payazaservice
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PayazaService is the Schema for the payazaservices API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PayazaServiceSpec defines the desired state of PayazaService
            properties:
              additionalLabels:
                additionalProperties:
                  type: string
                description: AdditionalLabels specifies extra labels to add to all
                  managed resources (Deployment, Service, etc.).
                type: object
              additionalSecret:
                description: |-
                  AdditionalSecretsRef specifies a list of *existing* secret names
                  to be used as ImagePullSecrets for the Deployment.
                  Example: - name: my-docker-registry-secret
                items:
                  description: |-
                    SecretReference points to an existing Secret by its Name.
                    Used for AdditionalSecretsRef (e.g., ImagePullSecrets).
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              autoscaling:
                description: Autoscaling defines the desired HorizontalPodAutoscaler
                  configuration.
                properties:
                  maxReplicas:
                    format: int32
                    type: integer
                  minReplicas:
                    format: int32
                    type: integer
                  targetCPUUtilizationPercentage:
                    format: int32
                    type: integer
                  targetMemoryUtilizationPercentage:
                    format: int32
                    type: integer
                required:
                - maxReplicas
                - minReplicas
                type: object
              configs:
                additionalProperties:
                  type: string
                description: |-
                  Configs specifies key-value pairs for a ConfigMap that will be *created*
                  by the operator and its data exposed as environment variables.
                  Each key in this map becomes an environment variable name.
                type: object
              containerPort:
                description: ContainerPort is the port the container listens on.
                format: int32
                type: integer
              env:
                description: |-
                  Env defines custom environment variables for the container,
                  allowing inline values or references to *existing* secrets/configmaps.
                items:
                  description: EnvVar defines an environment variable
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    valueFrom:
                      description: EnvVarSource represents a source for the value
                        of an EnvVar.
                      properties:
                        configMapKeyRef:
                          description: |-
                            ConfigMapKeySelector selects a key of an *existing* ConfigMap.
                            Used for referencing configmaps in EnvVarSource.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        secretKeyRef:
                          description: |-
                            SecretKeySelector selects a key of an *existing* Secret.
                            Used for referencing secrets in EnvVarSource.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              image:
                description: Image is the container image to deploy.
                type: string
              ingress:
                description: Ingress defines the desired Ingress configuration.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  enabled:
                    type: boolean
                  host:
                    type: string
                  path:
                    type: string
                  pathType:
                    type: string
                  tls:
                    type: boolean
                  tlsSecretName:
                    type: string
                required:
                - host
                type: object
              replicas:
                description: Replicas is the desired number of pods.
                format: int32
                type: integer
              resources:
                description: Resources defines the compute resources required by the
                  container.
                properties:
                  limits:
                    additionalProperties:
                      type: string
                    type: object
                  requests:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              secrets:
                additionalProperties:
                  type: string
                description: |-
                  Secrets specifies key-value pairs for a Secret that will be *created*
                  by the operator and its data exposed as environment variables.
                  Each key in this map becomes an environment variable name.
                type: object
              serviceAccountName:
                description: |-
                  ServiceAccountName specifies the name of the ServiceAccount to use.
                  If empty, a default ServiceAccount is used, but not explicitly created by the operator.
                type: string
              serviceType:
                default: ClusterIP
                description: ServiceType is the Kubernetes Service type (e.g., ClusterIP,
                  NodePort, LoadBalancer).
                type: string
            required:
            - containerPort
            - image
            - replicas
            type: object
          status:
            description: PayazaServiceStatus defines the observed state of PayazaService
            properties:
              deploymentName:
                description: DeploymentName is the name of the managed Deployment.
                type: string
              hpaName:
                description: HpaName is the name of the managed HorizontalPodAutoscaler.
                type: string
              ingressName:
                description: IngressName is the name of the managed Ingress.
                type: string
              readyReplicas:
                description: ReadyReplicas is the number of ready pods in the Deployment.
                format: int32
                type: integer
              replicas:
                description: Replicas is the actual number of desired replicas.
                format: int32
                type: integer
              serviceName:
                description: ServiceName is the name of the managed Service.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end -}}
